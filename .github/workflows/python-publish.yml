# This workflow will build and publish your Python package to TestPyPI using a classic API token stored in GitHub Secrets.
# Make sure you have added TEST_PYPI_API_TOKEN as a secret in your repository.

name: Build, Version, and Publish Python Package

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-version-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install build and versioning tools
        run: python -m pip install build twine python-semantic-release
      - name: Bump version and changelog
        uses: python-semantic-release/python-semantic-release@v8.7.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build package
        run: python -m build
      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*

